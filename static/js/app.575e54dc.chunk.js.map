{"version":3,"sources":["components/ScrollContainer.js","api.js","components/Poster.js","components/Votes.js","utils.js","components/Detail/Link.js","screens/Detail/DetailPresenter.js","screens/Detail/DetailContainer.js","screens/Detail/index.js","components/Movies/Slide.js","components/Vertical.js","components/Horizontal.js","components/Title.js","components/HorizontalSlider.js","components/List.js","screens/Movies/MoviesPresenter.js","screens/Movies/index.js","screens/Movies/MoviesContainer.js","screens/Tv/TvPresenter.js","screens/Tv/index.js","screens/Tv/TvContainer.js","components/Search/Input.js","screens/Search/SearchPresenter.js","screens/Search/index.js","screens/Search/SearchContainer.js","screens/Favs/FavsPresenter.js","screens/Favs/index.js","screens/Favs/FavsContainer.js","navigation/Tabs.js","navigation/Stack.js","App.js","web-build/register-service-worker.js","assets/splash.png"],"names":["ScrollContainer","loading","children","contentContainerStyle","refreshFn","useState","refreshing","setRefreshing","ScrollView","refreshControl","RefreshControl","onRefresh","a","async","enabled","tintColor","style","backgroundColor","flex","justifyContent","ActivityIndicator","color","size","propTypes","PropTypes","bool","isRequired","node","object","func","makeRequest","path","params","axios","get","api_key","getAnything","results","data","console","log","movieApi","region","query","id","append_to_response","tvApi","apiImage","defaultPoster","Image","styled","Poster","url","source","uri","string","Container","Text","Votes","votes","trimText","text","limit","length","slice","formatDate","date","Date","toLocaleDateString","day","month","year","View","Link","onPress","icon","TouchableOpacity","FontAwesome","name","BG","Header","Dimensions","height","Info","Title","Data","DataName","DataValue","openBrowser","result","paddingBottom","backgroundImage","poster","title","overview","marginTop","spoken_languages","map","l","release_date","status","runtime","first_air_date","genres","g","index","number_of_episodes","number_of_seasons","imdb_id","videos","video","key","DetailContainer","navigation","route","isTv","detail","setDetail","useEffect","getDetail","backdrop_path","poster_path","vote_average","getData","React","useLayoutEffect","setOptions","DetailPresenter","WebBrowser","Content","VotesContainer","Overview","Button","ButtonText","Slide","useNavigation","navigate","number","Vertical","ReleaseDate","Horizontal","releaseDate","HorizontalSlider","marginBottom","paddingLeft","horizontal","showsHorizontalScrollIndicator","List","HEIGHT","width","SliderContainer","nowPlaying","popular","upcoming","controlsEnabled","loop","timeout","movie","original_title","MovieContainer","nowPlayingError","popularError","upcomingError","movies","setMovies","MoviesPresenter","topRated","today","show","thisWeek","todayError","thisWeekError","topRatedError","shows","setShows","TvPresenter","TextInput","Input","placeholder","value","onChange","onSubmit","onChangeText","onSubmitEditing","returnKeyType","keyword","paddingTop","SearchContainer","setKeyword","movieError","showsError","setResults","SearchPresenter","WIDTH","styles","top","position","topIndex","setTopIndex","nextCard","currentValue","Animated","ValueXY","panResponder","PanResponder","create","onStartShouldSetPanResponder","onPanResponderMove","evt","dx","dy","setValue","x","y","onPanResponderRelease","spring","toValue","start","roationValues","interpolate","inputRange","outputRange","extrapolate","secondCardOpacity","secondCardScale","zIndex","transform","rotate","getTranslateTransform","panHandlers","opacity","scale","FavsContainer","error","FavsPresenter","Tabs","createBottomTabNavigator","state","routeNames","getHeaderName","Navigator","screenOptions","tabBarIcon","focused","iconName","Platform","OS","Ionicons","tabBarOptions","showLabel","borderTopColor","Screen","component","Movies","Tv","Search","Favs","Stack","createStackNavigator","headerStyle","borderBottomColor","shadowColor","headerTintColor","headerBackTitleVisible","headerBackImage","Detail","require","App","isReady","setIsReady","NavigationContainer","StatusBar","barStyle","AppLoading","startAsync","images","image","prefetch","Asset","fromModule","downloadAsync","cacheImages","fonts","font","Font","cacheFonts","Promise","all","onFinish","onError","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","module","exports"],"mappings":"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","file":"static/js/app.575e54dc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ScrollView, ActivityIndicator, RefreshControl } from \"react-native\";\n\nconst ScrollContainer = ({\n  loading,\n  children,\n  contentContainerStyle,\n  refreshFn\n}) => {\n  const [refreshing, setRefreshing] = useState(false);\n  const onRefresh = async () => {\n    setRefreshing(true);\n    await refreshFn();\n    setRefreshing(false);\n  };\n  return (\n    <ScrollView\n      refreshControl={\n        <RefreshControl\n          onRefresh={onRefresh}\n          refreshing={refreshing}\n          enabled={false}\n          tintColor={\"white\"}\n        />\n      }\n      style={{ backgroundColor: \"black\" }}\n      contentContainerStyle={{\n        flex: loading ? 1 : 0,\n        justifyContent: loading ? \"center\" : \"flex-start\",\n        ...contentContainerStyle\n      }}\n    >\n      {loading ? <ActivityIndicator color=\"white\" size=\"small\" /> : children}\n    </ScrollView>\n  );\n};\n\nScrollContainer.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  contentContainerStyle: PropTypes.object,\n  refreshFn: PropTypes.func\n};\n\nexport default ScrollContainer;\n","import axios from \"axios\";\n\nconst TMDB_KEY = \"10923b261ba94d897ac6b81148314a3f\";\n\nconst makeRequest = (path, params) =>\n  axios.get(`https://api.themoviedb.org/3${path}`, {\n    params: {\n      ...params,\n      api_key: TMDB_KEY\n    }\n  });\n\nconst getAnything = async (path, params = {}) => {\n  try {\n    const {\n      data: { results },\n      data\n    } = await makeRequest(path, params);\n    return [results || data, null];\n  } catch (e) {\n    console.log(e);\n    return [null, e];\n  }\n};\n\nexport const movieApi = {\n  nowPlaying: () => getAnything(\"/movie/now_playing\"),\n  popular: () => getAnything(\"/movie/popular\"),\n  upcoming: () => getAnything(\"/movie/upcoming\", { region: \"kr\" }),\n  search: query => getAnything(\"/search/movie\", { query }),\n  movie: id => getAnything(`/movie/${id}`, { append_to_response: \"videos\" }),\n  discover: () => getAnything(\"/discover/movie\")\n};\n\nexport const tvApi = {\n  today: () => getAnything(\"/tv/airing_today\"),\n  thisWeek: () => getAnything(\"/tv/on_the_air\"),\n  topRated: () => getAnything(\"/tv/top_rated\"),\n  popular: () => getAnything(\"/tv/popular\"),\n  search: query => getAnything(\"/search/tv\", { query }),\n  show: id => getAnything(`/tv/${id}`, { append_to_response: \"videos\" })\n};\n\nexport const apiImage = (\n  path,\n  defaultPoster = \"https://images.unsplash.com/photo-1571847140471-1d7766e825ea?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=673&q=80\"\n) => (path ? `https://image.tmdb.org/t/p/w500${path}` : defaultPoster);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components/native\";\nimport { apiImage } from \"../api\";\n\nconst Image = styled.Image`\n  width: 100px;\n  height: 160px;\n  border-radius: 4px;\n`;\n\nconst Poster = ({ url }) => <Image source={{ uri: apiImage(url) }} />;\n\nPoster.propTypes = {\n  url: PropTypes.string\n};\n\nexport default Poster;\n","import React from \"react\";\nimport styled from \"styled-components/native\";\n\nconst Container = styled.Text`\n  color: rgb(220, 220, 220);\n  margin-bottom: 7px;\n  font-weight: 500;\n  font-size: 12px;\n`;\n\nconst Votes = ({ votes }) => <Container>⭐️ {votes} / 10</Container>;\n\nexport default Votes;\n","export const trimText = (text = \"\", limit) =>\n  text.length > limit ? `${text.slice(0, limit)}...` : text;\n\nexport const formatDate = date => {\n  const theDate = new Date(date);\n  return theDate.toLocaleDateString(\"ko\", {\n    day: \"numeric\",\n    month: \"long\",\n    year: \"numeric\"\n  });\n};\n","import React from \"react\";\nimport { TouchableOpacity } from \"react-native\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport styled from \"styled-components/native\";\n\nconst Container = styled.View`\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 5px;\n`;\n\nconst Text = styled.Text`\n  font-weight: 600;\n  margin-left: 10px;\n`;\n\nconst Link = ({ onPress, text, icon }) => (\n  <TouchableOpacity onPress={onPress}>\n    <Container>\n      <FontAwesome name={icon} color=\"white\" size={22} />\n      <Text style={{ color: \"white\" }}>{text}</Text>\n    </Container>\n  </TouchableOpacity>\n);\n\nexport default Link;\n","import React from \"react\";\nimport styled from \"styled-components/native\";\nimport ScrollContainer from \"../../components/ScrollContainer\";\nimport { apiImage } from \"../../api\";\nimport { Dimensions, ActivityIndicator } from \"react-native\";\nimport Poster from \"../../components/Poster\";\nimport Votes from \"../../components/Votes\";\nimport { formatDate } from \"../../utils\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport Link from \"../../components/Detail/Link\";\n\nconst BG = styled.Image`\n  width: 100%;\n  height: 100%;\n  opacity: 0.4;\n  position: absolute;\n`;\n\nconst Header = styled.View`\n  height: ${Dimensions.get(\"window\").height / 3}px;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nconst Container = styled.View`\n  flex-direction: row;\n  align-items: center;\n  top: 30px;\n`;\n\nconst Info = styled.View`\n  width: 50%;\n  margin-left: 40px;\n`;\n\nconst Title = styled.Text`\n  color: white;\n  font-weight: 600;\n  font-size: 24px;\n  margin-bottom: 10px;\n`;\n\nconst Data = styled.View`\n  margin-top: 30px;\n  padding: 0px 30px;\n`;\n\nconst DataName = styled.Text`\n  margin-top: 30px;\n  color: white;\n  opacity: 0.8;\n  font-weight: 800;\n  margin-bottom: 15px;\n`;\n\nconst DataValue = styled.Text`\n  color: white;\n  opacity: 0.8;\n  font-weight: 500;\n`;\n\nexport default ({ openBrowser, result, loading }) => (\n  <ScrollContainer\n    loading={false}\n    contentContainerStyle={{ paddingBottom: 80 }}\n  >\n    <>\n      <Header>\n        <BG source={{ uri: apiImage(result.backgroundImage, \"-\") }} />\n        <Container>\n          <Poster url={result.poster} />\n          <Info>\n            <Title>{result.title}</Title>\n            {result.votes ? <Votes votes={result.votes} /> : null}\n          </Info>\n        </Container>\n      </Header>\n      <Data>\n        {result.overview ? (\n          <>\n            <DataName>Overview</DataName>\n            <DataValue>{result.overview}</DataValue>\n          </>\n        ) : null}\n        {loading ? (\n          <ActivityIndicator style={{ marginTop: 30 }} color={\"white\"} />\n        ) : null}\n        {result.spoken_languages ? (\n          <>\n            <DataName>Languages</DataName>\n            <DataValue>\n              {result.spoken_languages.map(l => `${l.name} `)}\n            </DataValue>\n          </>\n        ) : null}\n        {result.release_date ? (\n          <>\n            <DataName>Release Date</DataName>\n            <DataValue>{formatDate(result.release_date)}</DataValue>\n          </>\n        ) : null}\n        {result.status ? (\n          <>\n            <DataName>Status</DataName>\n            <DataValue>{result.status}</DataValue>\n          </>\n        ) : null}\n        {result.runtime ? (\n          <>\n            <DataName>Runtime</DataName>\n            <DataValue>{result.runtime} minutes</DataValue>\n          </>\n        ) : null}\n        {result.first_air_date ? (\n          <>\n            <DataName>First Air Date</DataName>\n            <DataValue>{formatDate(result.first_air_date)}</DataValue>\n          </>\n        ) : null}\n        {result.genres ? (\n          <>\n            <DataName>Genres</DataName>\n            <DataValue>\n              {result.genres.map((g, index) =>\n                index + 1 === result.genres.length ? g.name : `${g.name}, `\n              )}\n            </DataValue>\n          </>\n        ) : null}\n        {result.number_of_episodes ? (\n          <>\n            <DataName>Seasons / Episodes</DataName>\n            <DataValue>\n              {result.number_of_seasons} / {result.number_of_episodes}\n            </DataValue>\n          </>\n        ) : null}\n        {result.imdb_id ? (\n          <>\n            <DataName>Links</DataName>\n            <Link\n              text={\"IMDB Page\"}\n              icon={\"imdb\"}\n              onPress={() =>\n                openBrowser(`https://www.imdb.com/title/${result.imdb_id}`)\n              }\n            />\n          </>\n        ) : null}\n        {result.videos.results?.length > 0 ? (\n          <>\n            <DataName>Videos</DataName>\n            {result.videos.results.map(video => (\n              <Link\n                text={video.name}\n                key={video.id}\n                icon=\"youtube-play\"\n                onPress={() =>\n                  openBrowser(`https://www.youtube.com/watch?v=${video.key}`)\n                }\n              />\n            ))}\n          </>\n        ) : null}\n      </Data>\n    </>\n  </ScrollContainer>\n);\n","import React, { useState, useEffect } from \"react\";\nimport * as WebBrowser from \"expo-web-browser\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { movieApi, tvApi } from \"../../api\";\n\nexport default ({\n  navigation,\n  route: {\n    params: { isTv, id, title, backgroundImage, poster, votes, overview }\n  }\n}) => {\n  const [detail, setDetail] = useState({\n    loading: true,\n    result: {\n      title,\n      backgroundImage,\n      poster,\n      overview,\n      votes,\n      videos: {\n        results: []\n      }\n    }\n  });\n  const getData = async () => {\n    const [getDetail, getDetailError] = isTv\n      ? await tvApi.show(id)\n      : await movieApi.movie(id);\n    setDetail({\n      loading: false,\n      result: {\n        ...getDetail,\n        title: getDetail.title || getDetail.name,\n        backgroundImage: getDetail.backdrop_path,\n        poster: getDetail.poster_path,\n        overview: getDetail.overview,\n        votes: getDetail.vote_average\n      }\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, [id]);\n  React.useLayoutEffect(() => {\n    navigation.setOptions({ title });\n  });\n\n  const openBrowser = async url => {\n    await WebBrowser.openBrowserAsync(url);\n  };\n\n  return <DetailPresenter openBrowser={openBrowser} {...detail} />;\n};\n","import DetailContainer from \"./DetailContainer\";\nexport default DetailContainer;\n","import React from \"react\";\nimport styled from \"styled-components/native\";\nimport PropTypes from \"prop-types\";\nimport { TouchableOpacity } from \"react-native\";\nimport { apiImage } from \"../../api\";\nimport { trimText } from \"../../utils\";\nimport Poster from \"../Poster\";\nimport Votes from \"../Votes\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst Container = styled.View`\n  height: 100%;\n  width: 100%;\n`;\n\nconst BG = styled.Image`\n  height: 100%;\n  width: 100%;\n  opacity: 0.4;\n  position: absolute;\n`;\n\nconst Content = styled.View`\n  height: 100%;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nconst Data = styled.View`\n  width: 50%;\n  align-items: flex-start;\n`;\n\nconst Title = styled.Text`\n  color: white;\n  font-weight: bold;\n  font-size: 19px;\n  margin-bottom: 10px;\n`;\n\nconst VotesContainer = styled.View`\n  margin-bottom: 7px;\n`;\n\nconst Overview = styled.Text`\n  color: rgb(220, 220, 220);\n  font-size: 14px;\n  font-weight: 500;\n`;\n\nconst Button = styled.View`\n  margin-top: 10px;\n  background-color: #e74c3c;\n  padding: 7px 10px;\n  border-radius: 3px;\n`;\n\nconst ButtonText = styled.Text`\n  color: white;\n`;\n\nconst Slide = ({ id, title, backgroundImage, votes, overview, poster }) => {\n  const navigation = useNavigation();\n  const goToDetail = () =>\n    navigation.navigate(\"Detail\", {\n      id,\n      title,\n      backgroundImage,\n      votes,\n      overview,\n      poster\n    });\n  return (\n    <Container>\n      <BG source={{ uri: apiImage(backgroundImage) }} />\n      <Content>\n        <Poster url={poster} />\n        <Data>\n          <Title>{trimText(title, 40)}</Title>\n          <VotesContainer>\n            <Votes votes={votes} />\n          </VotesContainer>\n          <Overview>{trimText(overview, 80)}</Overview>\n          <TouchableOpacity onPress={goToDetail}>\n            <Button>\n              <ButtonText>View details</ButtonText>\n            </Button>\n          </TouchableOpacity>\n        </Data>\n      </Content>\n    </Container>\n  );\n};\n\nSlide.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  backgroundImage: PropTypes.string.isRequired,\n  votes: PropTypes.number.isRequired,\n  overview: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired\n};\n\nexport default Slide;\n","import React from \"react\";\nimport styled from \"styled-components/native\";\nimport PropTypes from \"prop-types\";\nimport { TouchableOpacity } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { trimText } from \"../utils\";\nimport Poster from \"./Poster\";\nimport Votes from \"./Votes\";\n\nconst Container = styled.View`\n  align-items: center;\n  margin-right: 20px;\n`;\n\nconst Title = styled.Text`\n  color: white;\n  font-weight: 500;\n  margin: 10px 0px 5px 0px;\n`;\n\nconst Vertical = ({ isTv = false, id, poster, title, votes }) => {\n  const navigation = useNavigation();\n  const goToDetai = () => {\n    navigation.navigate(\"Detail\", {\n      isTv,\n      id,\n      title,\n      poster,\n      votes\n    });\n  };\n  return (\n    <TouchableOpacity onPress={goToDetai}>\n      <Container>\n        <Poster url={poster} />\n        <Title>{trimText(title, 10)}</Title>\n        {votes > 0 && <Votes votes={votes} />}\n      </Container>\n    </TouchableOpacity>\n  );\n};\n\nVertical.propTypes = {\n  id: PropTypes.number.isRequired,\n  poster: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  votes: PropTypes.number.isRequired\n};\n\nexport default Vertical;\n","import React from \"react\";\nimport styled from \"styled-components/native\";\nimport PropTypes from \"prop-types\";\nimport { TouchableOpacity } from \"react-native\";\nimport Poster from \"./Poster\";\nimport Votes from \"./Votes\";\nimport { apiImage } from \"../api\";\nimport { trimText, formatDate } from \"../utils\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst Container = styled.View`\n  padding: 0px 30px;\n  margin-bottom: 30px;\n  flex-direction: row;\n  align-items: flex-start;\n`;\n\nconst Data = styled.View`\n  align-items: flex-start;\n  width: 65%;\n  margin-left: 25px;\n`;\n\nconst Title = styled.Text`\n  color: white;\n  font-weight: bold;\n  margin-bottom: 10px;\n`;\nconst ReleaseDate = styled.Text`\n  color: white;\n  opacity: 0.8;\n  font-size: 12px;\n`;\n\nconst Overview = styled.Text`\n  margin-top: 10px;\n  color: white;\n  opacity: 0.8;\n`;\n\nconst Horizontal = ({\n  isTv = false,\n  id,\n  title,\n  poster,\n  overview,\n  releaseDate\n}) => {\n  const navigation = useNavigation();\n  const goToDetai = () => {\n    navigation.navigate(\"Detail\", {\n      isTv,\n      id,\n      title,\n      poster,\n      overview,\n      releaseDate\n    });\n  };\n  return (\n    <TouchableOpacity onPress={goToDetai}>\n      <Container>\n        <Poster url={poster} />\n        <Data>\n          <Title>{trimText(title, 30)}</Title>\n          {releaseDate ? (\n            <ReleaseDate>{formatDate(releaseDate)}</ReleaseDate>\n          ) : null}\n          <Overview>{trimText(overview, 80)}</Overview>\n        </Data>\n      </Container>\n    </TouchableOpacity>\n  );\n};\n\nHorizontal.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  releaseDate: PropTypes.string,\n  poster: PropTypes.string.isRequired,\n  overview: PropTypes.string.isRequired\n};\n\nexport default Horizontal;\n","import React from \"react\";\nimport styled from \"styled-components/native\";\nimport PropTypes from \"prop-types\";\n\nconst Text = styled.Text`\n  color: white;\n  font-weight: bold;\n  font-size: 16px;\n  margin-left: 30px;\n`;\n\nconst Title = ({ title }) => <Text>{title}</Text>;\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default Title;\n","import React from \"react\";\nimport Title from \"./Title\";\nimport { ScrollView, View } from \"react-native\";\nimport PropTypes from \"prop-types\";\n\nconst HorizontalSlider = ({ title, children }) => (\n  <View>\n    <Title title={title} />\n    <ScrollView\n      style={{ marginTop: 20, marginBottom: 40 }}\n      contentContainerStyle={{ paddingLeft: 30 }}\n      horizontal\n      showsHorizontalScrollIndicator={false}\n    >\n      {children}\n    </ScrollView>\n  </View>\n);\n\nHorizontalSlider.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired\n};\n\nexport default HorizontalSlider;\n","import React from \"react\";\nimport styled from \"styled-components/native\";\nimport Title from \"./Title\";\n\nconst Container = styled.View`\n  margin-top: 20px;\n`;\n\nconst List = ({ title, children }) => (\n  <>\n    <Title title={title} />\n    <Container>{children}</Container>\n  </>\n);\n\nexport default List;\n","import React from \"react\";\nimport styled from \"styled-components/native\";\nimport Swiper from \"react-native-web-swiper\";\nimport { Dimensions } from \"react-native\";\nimport Slide from \"../../components/Movies/Slide\";\nimport Vertical from \"../../components/Vertical\";\nimport Horizontal from \"../../components/Horizontal\";\nimport ScrollContainer from \"../../components/ScrollContainer\";\nimport HorizontalSlider from \"../../components/HorizontalSlider\";\nimport List from \"../../components/List\";\n\nconst { width: WIDTH, height: HEIGHT } = Dimensions.get(\"window\");\n\nconst SliderContainer = styled.View`\n  width: 100%;\n  height: ${HEIGHT / 3}px;\n  margin-bottom: 40px;\n`;\n\nconst Container = styled.View``;\n\nexport default ({ refreshFn, loading, nowPlaying, popular, upcoming }) => (\n  <ScrollContainer refreshFn={refreshFn} loading={loading}>\n    <>\n      <SliderContainer>\n        <Swiper controlsEnabled={false} loop timeout={3}>\n          {nowPlaying.map(movie => (\n            <Slide\n              key={movie.id}\n              id={movie.id}\n              title={movie.original_title}\n              overview={movie.overview}\n              votes={movie.vote_average}\n              backgroundImage={movie.backdrop_path}\n              poster={movie.poster_path}\n            />\n          ))}\n        </Swiper>\n      </SliderContainer>\n      <Container>\n        <HorizontalSlider title={\"Popular Movies\"}>\n          {popular.map(movie => (\n            <Vertical\n              id={movie.id}\n              key={movie.id}\n              poster={movie.poster_path}\n              title={movie.title}\n              votes={movie.vote_average}\n            />\n          ))}\n        </HorizontalSlider>\n        <List title=\"Coming Soon\">\n          {upcoming.map(movie => (\n            <Horizontal\n              key={movie.id}\n              id={movie.id}\n              title={movie.title}\n              releaseDate={movie.release_date}\n              poster={movie.poster_path}\n              overview={movie.overview}\n            />\n          ))}\n        </List>\n      </Container>\n    </>\n  </ScrollContainer>\n);\n","import MovieContainer from \"./MoviesContainer\";\nexport default MovieContainer;\n","import React, { useEffect, useState } from \"react\";\nimport { movieApi } from \"../../api\";\nimport MoviesPresenter from \"./MoviesPresenter\";\n\nexport default () => {\n  const [refreshing, setRefresing] = useState(false);\n  const [movies, setMovies] = useState({\n    loading: true,\n    nowPlaying: [],\n    popular: [],\n    upcoming: [],\n    nowPlayingError: null,\n    popularError: null,\n    upcomingError: null\n  });\n  const getData = async () => {\n    const [nowPlaying, nowPlayingError] = await movieApi.nowPlaying();\n    const [popular, popularError] = await movieApi.popular();\n    const [upcoming, upcomingError] = await movieApi.upcoming();\n    setMovies({\n      loading: false,\n      nowPlaying,\n      popular,\n      upcoming,\n      nowPlayingError,\n      popularError,\n      upcomingError\n    });\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return <MoviesPresenter refreshFn={getData} {...movies} />;\n};\n","import React from \"react\";\nimport ScrollContainer from \"../../components/ScrollContainer\";\nimport HorizontalSlider from \"../../components/HorizontalSlider\";\nimport Vertical from \"../../components/Vertical\";\nimport Horizontal from \"../../components/Horizontal\";\nimport styled from \"styled-components/native\";\nimport List from \"../../components/List\";\n\nconst Container = styled.View`\n  margin-top: 30px;\n`;\n\nexport default ({ refreshFn, loading, popular, topRated, today }) => (\n  <ScrollContainer refreshFn={refreshFn} loading={loading}>\n    <Container>\n      <HorizontalSlider title=\"Popular Shows\">\n        {popular.map(show => (\n          <Vertical\n            isTv={true}\n            id={show.id}\n            key={show.id}\n            poster={show.poster_path}\n            title={show.name}\n            votes={show.vote_average}\n          />\n        ))}\n      </HorizontalSlider>\n      <HorizontalSlider title=\"Top Rated\">\n        {topRated.map(show => (\n          <Vertical\n            isTv={true}\n            id={show.id}\n            key={show.id}\n            poster={show.poster_path}\n            title={show.name}\n            votes={show.vote_average}\n          />\n        ))}\n      </HorizontalSlider>\n      <List title=\"Airing Today\">\n        {today.map(show => (\n          <Horizontal\n            isTv={true}\n            key={show.id}\n            id={show.id}\n            title={show.name}\n            poster={show.poster_path}\n            overview={show.overview}\n          />\n        ))}\n      </List>\n    </Container>\n  </ScrollContainer>\n);\n","import Container from \"./TvContainer\";\nexport default Container;\n","import React, { useEffect, useState } from \"react\";\nimport { tvApi } from \"../../api\";\nimport TvPresenter from \"./TvPresenter\";\n\nexport default () => {\n  const [shows, setShows] = useState({\n    loading: true,\n    today: [],\n    thisWeek: [],\n    topRated: [],\n    popular: [],\n    todayError: null,\n    thisWeekError: null,\n    topRatedError: null,\n    popularError: null\n  });\n  const getData = async () => {\n    const [today, todayError] = await tvApi.today();\n    const [topRated, topRatedError] = await tvApi.topRated();\n    const [popular, popularError] = await tvApi.popular();\n    const [thisWeek, thisWeekError] = await tvApi.thisWeek();\n    setShows({\n      loading: false,\n      today,\n      thisWeek,\n      topRated,\n      popular,\n      todayError,\n      thisWeekError,\n      topRatedError,\n      popularError\n    });\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  return <TvPresenter refreshFn={getData} {...shows} />;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components/native\";\n\nconst TextInput = styled.TextInput`\n  background-color: white;\n  margin: 0px 30px;\n  padding: 10px 20px;\n  border-radius: 15px;\n  margin-bottom: 50px;\n`;\n\nconst Input = ({ placeholder, value, onChange, onSubmit }) => (\n  <TextInput\n    value={value}\n    onChangeText={onChange}\n    placeholder={placeholder}\n    onSubmitEditing={onSubmit}\n    returnKeyType={\"search\"}\n  />\n);\n\nInput.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\n\nexport default Input;\n","import React from \"react\";\nimport styled from \"styled-components/native\";\nimport Input from \"../../components/Search/Input\";\nimport HorizontalSlider from \"../../components/HorizontalSlider\";\nimport Vertical from \"../../components/Vertical\";\nimport ScrollContainer from \"../../components/ScrollContainer\";\n\nexport default ({ movies, shows, keyword, onChange, onSubmit }) => (\n  <ScrollContainer\n    refreshFn={onSubmit}\n    loading={false}\n    contentContainerStyle={{\n      paddingTop: 10\n    }}\n  >\n    <Input\n      placeholder={\"Write a keyword\"}\n      value={keyword}\n      onChange={onChange}\n      onSubmit={onSubmit}\n    />\n    {movies.length !== 0 && (\n      <HorizontalSlider title={\"Movie Results\"}>\n        {movies.map(movie => (\n          <Vertical\n            key={movie.id}\n            id={movie.id}\n            votes={movie.vote_average}\n            title={movie.title}\n            poster={movie.poster_path || movie.backdrop_path}\n          />\n        ))}\n      </HorizontalSlider>\n    )}\n    {shows.length !== 0 && (\n      <HorizontalSlider title={\"TV Results\"}>\n        {shows.map(show => (\n          <Vertical\n            isTv={true}\n            key={show.id}\n            id={show.id}\n            votes={show.vote_average}\n            title={show.name}\n            poster={show.poster_path}\n          />\n        ))}\n      </HorizontalSlider>\n    )}\n  </ScrollContainer>\n);\n","import SearchContainer from \"./SearchContainer\";\nexport default SearchContainer;\n","import React, { useState } from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { movieApi, tvApi } from \"../../api\";\n\nexport default () => {\n  const [keyword, setKeyword] = useState(\"\");\n  const [results, setResults] = useState({\n    movies: [],\n    shows: [],\n    movieError: null,\n    showsError: null\n  });\n  const onChange = text => setKeyword(text);\n  const search = async () => {\n    if (keyword === \"\") {\n      return;\n    }\n    const [movies, movieError] = await movieApi.search(keyword);\n    const [shows, showsError] = await tvApi.search(keyword);\n    setResults({\n      movies,\n      shows,\n      movieError,\n      showsError\n    });\n  };\n\n  return (\n    <SearchPresenter\n      {...results}\n      onChange={onChange}\n      onSubmit={search}\n      keyword={keyword}\n    />\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { PanResponder, Dimensions, Animated } from \"react-native\";\nimport styled from \"styled-components/native\";\nimport { apiImage } from \"../../api\";\n\nconst { width: WIDTH, height: HEIGHT } = Dimensions.get(\"window\");\n\nconst Container = styled.View`\n  flex: 1;\n  background-color: black;\n  align-items: center;\n`;\n\nconst Poster = styled.Image`\n  border-radius: 20px;\n  width: 100%;\n  height: 100%;\n`;\n\nconst styles = {\n  top: 50,\n  height: HEIGHT / 1.5,\n  width: \"90%\",\n  position: \"absolute\"\n};\n\nexport default ({ results }) => {\n  const [topIndex, setTopIndex] = useState(0);\n  const nextCard = () => setTopIndex(currentValue => currentValue + 1);\n  const position = new Animated.ValueXY();\n  const panResponder = PanResponder.create({\n    onStartShouldSetPanResponder: () => true,\n    onPanResponderMove: (evt, { dx, dy }) => {\n      position.setValue({ x: dx, y: dy });\n    },\n    onPanResponderRelease: (evt, { dx, dy }) => {\n      if (dx >= 250) {\n        Animated.spring(position, {\n          toValue: {\n            x: WIDTH + 100,\n            y: dy\n          }\n        }).start(nextCard);\n      } else if (dx <= -250) {\n        Animated.spring(position, {\n          toValue: {\n            x: -WIDTH - 100,\n            y: dy\n          }\n        }).start(nextCard);\n      } else {\n        Animated.spring(position, {\n          toValue: {\n            x: 0,\n            y: 0\n          }\n        }).start();\n      }\n    }\n  });\n  const roationValues = position.x.interpolate({\n    inputRange: [-255, 0, 255],\n    outputRange: [\"-8deg\", \"0deg\", \"8deg\"],\n    extrapolate: \"clamp\"\n  });\n  const secondCardOpacity = position.x.interpolate({\n    inputRange: [-255, 0, 255],\n    outputRange: [1, 0.2, 1],\n    extrapolate: \"clamp\"\n  });\n  const secondCardScale = position.x.interpolate({\n    inputRange: [-255, 0, 255],\n    outputRange: [1, 0.8, 1],\n    extrapolate: \"clamp\"\n  });\n  useEffect(() => {\n    position.setValue({ x: 0, y: 0 });\n  }, [topIndex]);\n  return (\n    <Container>\n      {results.map((result, index) => {\n        if (index < topIndex) {\n          return null;\n        } else if (index === topIndex) {\n          return (\n            <Animated.View\n              style={{\n                ...styles,\n                zIndex: 1,\n                transform: [\n                  { rotate: roationValues },\n                  ...position.getTranslateTransform()\n                ]\n              }}\n              key={result.id}\n              {...panResponder.panHandlers}\n            >\n              <Poster source={{ uri: apiImage(result.poster_path) }} />\n            </Animated.View>\n          );\n        } else if (index === topIndex + 1) {\n          return (\n            <Animated.View\n              style={{\n                ...styles,\n                zIndex: -index,\n                opacity: secondCardOpacity,\n                transform: [{ scale: secondCardScale }]\n              }}\n              key={result.id}\n              {...panResponder.panHandlers}\n            >\n              <Poster source={{ uri: apiImage(result.poster_path) }} />\n            </Animated.View>\n          );\n        } else {\n          return (\n            <Animated.View\n              style={{\n                ...styles,\n                zIndex: -index,\n                opacity: 0\n              }}\n              key={result.id}\n              {...panResponder.panHandlers}\n            >\n              <Poster source={{ uri: apiImage(result.poster_path) }} />\n            </Animated.View>\n          );\n        }\n      })}\n    </Container>\n  );\n};\n","import FavsContainer from \"./FavsContainer\";\nexport default FavsContainer;\n","import React, { useState, useEffect } from \"react\";\nimport FavsPresenter from \"./FavsPresenter\";\nimport { movieApi } from \"../../api\";\n\nexport default () => {\n  const [movies, setMovies] = useState({\n    results: [],\n    error: null\n  });\n  const getData = async () => {\n    const [results, error] = await movieApi.discover();\n    setMovies({\n      results,\n      error\n    });\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  return <FavsPresenter {...movies} />;\n};\n","import React, { useLayoutEffect } from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport Movies from \"../screens/Movies\";\nimport Tv from \"../screens/Tv\";\nimport Search from \"../screens/Search\";\nimport Favs from \"../screens/Favs\";\nimport { Platform } from \"react-native\";\n\nconst Tabs = createBottomTabNavigator();\n\nconst getHeaderName = route =>\n  route?.state?.routeNames[route.state.index] || \"Movies\";\n\nexport default ({ navigation, route }) => {\n  useLayoutEffect(() => {\n    const name = getHeaderName(route);\n    navigation.setOptions({\n      title: name\n    });\n  }, [route]);\n  return (\n    <Tabs.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused }) => {\n          let iconName = Platform.OS === \"ios\" ? \"ios-\" : \"md-\";\n          if (route.name === \"Movies\") {\n            iconName += \"film\";\n          } else if (route.name === \"TV\") {\n            iconName += \"tv\";\n          } else if (route.name === \"Search\") {\n            iconName += \"search\";\n          } else if (route.name === \"Discovery\") {\n            iconName += \"heart\";\n          }\n          return (\n            <Ionicons\n              name={iconName}\n              color={focused ? \"white\" : \"grey\"}\n              size={26}\n            />\n          );\n        }\n      })}\n      tabBarOptions={{\n        showLabel: false,\n\n        style: {\n          backgroundColor: \"black\",\n          borderTopColor: \"black\"\n        }\n      }}\n    >\n      <Tabs.Screen name=\"Movies\" component={Movies} />\n      <Tabs.Screen name=\"TV\" component={Tv} />\n      <Tabs.Screen name=\"Search\" component={Search} />\n      <Tabs.Screen name=\"Discovery\" component={Favs} />\n    </Tabs.Navigator>\n  );\n};\n","import React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Detail from \"../screens/Detail\";\nimport Tabs from \"./Tabs\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nconst Stack = createStackNavigator();\n\nexport default () => (\n  <Stack.Navigator\n    screenOptions={{\n      headerStyle: {\n        backgroundColor: \"black\",\n        borderBottomColor: \"black\",\n        shadowColor: \"black\"\n      },\n      headerTintColor: \"#FFFFFF\",\n      headerBackTitleVisible: false,\n      headerBackImage: () => (\n        <Ionicons name=\"md-arrow-back\" color={\"white\"} size={26} />\n      )\n    }}\n  >\n    <Stack.Screen name=\"Tab\" component={Tabs} />\n    <Stack.Screen name=\"Detail\" component={Detail} />\n  </Stack.Navigator>\n);\n","import React, { useState } from \"react\";\nimport { AppLoading } from \"expo\";\nimport * as Font from \"expo-font\";\nimport { Image, StatusBar } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { Asset } from \"expo-asset\";\nimport { Ionicons, FontAwesome } from \"@expo/vector-icons\";\nimport Stack from \"./navigation/Stack\";\n\nrequire(\"@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/Ionicons.ttf\");\n\nconst cacheImages = images =>\n  images.map(image => {\n    if (typeof image === \"string\") {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n\nconst cacheFonts = fonts => fonts.map(font => Font.loadAsync(font));\n\nexport default function App() {\n  const [isReady, setIsReady] = useState(false);\n  const loadAssets = () => {\n    const images = cacheImages([\n      \"https://images.unsplash.com/photo-1571847140471-1d7766e825ea?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=673&q=80\",\n      require(\"./assets/splash.png\")\n    ]);\n    const fonts = cacheFonts([Ionicons.font, FontAwesome.font]);\n    return Promise.all([...images, ...fonts]);\n  };\n  const onFinish = () => setIsReady(true);\n  return isReady ? (\n    <>\n      <NavigationContainer>\n        <Stack />\n      </NavigationContainer>\n      <StatusBar barStyle=\"light-content\" />\n    </>\n  ) : (\n    <AppLoading\n      startAsync={loadAssets}\n      onFinish={onFinish}\n      onError={console.error}\n    />\n  );\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/splash.a8e4ac9b.png\";"],"sourceRoot":""}